---
- name: "Make sure the dependencies are installed"
  apt:
    pkg: "{{ntp_deps}}"
    state: present

- name: "Stop ntp if not running"
  service:
    name: "ntp"
    state: "stopped"
  when: not ntp_running

- name: "Check for apparmor"
  command: "dpkg -s apparmor"
  ignore_errors: true
  register: apparmor_check
  changed_when: false

- name: "Ignore NTP DHCP Configuration"
  file:
    path: "/var/lib/ntp/ntp.conf.dhcp"
    state: "absent"
  when: not ntp_dhcp
  notify: restart ntp

- name: "Check for ntp apparmor configuration"
  stat:
    path: "/etc/apparmor.d/usr.sbin.ntpd"
  register: apparmor_conf

- name: "Update apparmor for leapseconds"
  lineinfile:
    dest: "/etc/apparmor.d/usr.sbin.ntpd"
    line: "  /etc/ntp.leapseconds r,"
    regexp: ".+ntp.leapseconds.+"
    insertafter: ".+ntp.conf.+"
  when: apparmor_check.rc == 0 and apparmor_conf.stat.exists
  notify:
    - reload ntp apparmor
    - restart ntp
  retries: 5
  delay: 5

- name: "Fetch leapseconds file"
  get_url:
    url: "{{ntp_leapurl}}"
    dest: "/etc/ntp.leapseconds"
    owner: "{{ntp_user}}"
    group: "{{ntp_group}}"
    mode: "0660"
  notify:
    - restart ntp

- name: "Configure ntp (/etc/ntp.conf)"
  template:
    src: etc_ntp.conf.j2
    dest: /etc/ntp.conf
    owner: "{{ntp_user}}"
    group: "{{ntp_group}}"
    mode: "0660"
  notify:
    - restart ntp

- name: "Copy auto-ntpdate script"
  copy:
    src: auto-ntpdate.sh
    dest: /usr/local/sbin/auto-ntpdate
    mode: 0770
  when: ntp_auto_update

- name: "Generate auto-ntpdate cron"
  cron:
    name: "ANXS auto-ntpdate"
    hour: "*/{{ntp_auto_update_hour}}"
    minute: "0"
    state: present
    job: "/usr/local/sbin/auto-ntpdate"
  when: ntp_auto_update

- name: "Remove auto-ntpdate script"
  cron:
    name: "ANXS auto-ntpdate"
    state: absent
  when: not ntp_auto_update

- name: "Remove auto-ntpdate files"
  file:
    path: /usr/local/sbin/auto-ntpdate
    state: absent
  when: not ntp_auto_update

- name: "Stop ntp if not running"
  service:
    name: "ntp"
    state: "stopped"
  when: not ntp_running
